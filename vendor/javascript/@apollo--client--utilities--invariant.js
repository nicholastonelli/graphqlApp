// @apollo/client/utilities/invariant@4.0.4 downloaded from https://ga.jspm.io/npm:@apollo/client@4.0.4/utilities/invariant/index.js

import{__DEV__ as r}from"@apollo/client/utilities/environment";import{global as o}from"@apollo/client/utilities/internal/globals";import{v as n}from"../../_/BW1JkdTH.js";import{s as t}from"../../_/7tdIbCE0.js";const e="Invariant Violation";class InvariantError extends Error{constructor(r=e){super(r);this.name=e;Object.setPrototypeOf(this,InvariantError.prototype)}}const i=["debug","log","warn","error","silent"];let s=i.indexOf(r?"log":"silent");function a(r,...o){if(!r)throw f(...o)}function l(r){return function(o,...n){if(i.indexOf(r)>=s){const t=console[r]||console.log;if(typeof o==="number"){const r=o;o=m(r);if(!o){o=g(r,n);n=[]}}t(o,...n)}}}a.debug=l("debug");a.log=l("log");a.warn=l("warn");a.error=l("error");function c(r){const o=i[s];s=Math.max(0,i.indexOf(r));return o}function f(r,...o){return new InvariantError(m(r,o)||g(r,o))}const u=Symbol.for("ApolloErrorMessageHandler_"+n);function p(r){if(typeof r=="string")return r;try{return t(r,2).slice(0,1e3)}catch{return"<non-serializable>"}}function m(r,n=[]){if(r)return o[u]&&o[u](r,n.map(p))}function g(r,o=[]){if(r)return typeof r==="string"?o.reduce(((r,o)=>r.replace(/%[sdfo]/,p(o))),r):`An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#${encodeURIComponent(JSON.stringify({version:n,message:r,args:o.map(p)}))}`}export{u as ApolloErrorMessageHandler,InvariantError,a as invariant,f as newInvariantError,c as setVerbosity};

