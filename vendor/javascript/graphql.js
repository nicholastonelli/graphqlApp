// graphql@16.11.0 downloaded from https://ga.jspm.io/npm:graphql@16.11.0/index.mjs

import{d as $}from"./_/CyeuqsgS.js";import{i as Y,e as Z}from"./_/Dt6U5vZk.js";export{d as defaultFieldResolver,b as defaultTypeResolver,a as executeSync,l as locatedError}from"./_/Dt6U5vZk.js";import{p as ee}from"./_/sfAcPL4E.js";export{L as Lexer,T as TokenKind,b as parseConstValue,c as parseType,a as parseValue,s as syntaxError}from"./_/sfAcPL4E.js";import{v as se}from"./_/CicOSenZ.js";export{a as assertValidSchema,d as doTypesOverlap,i as isEqualType,b as isTypeSubTypeOf}from"./_/CicOSenZ.js";import{v as ae}from"./_/8BS7TVdU.js";export{E as ExecutableDefinitionsRule,F as FieldsOnCorrectTypeRule,a as FragmentsOnCompositeTypesRule,K as KnownArgumentNamesRule,b as KnownDirectivesRule,c as KnownFragmentNamesRule,d as KnownTypeNamesRule,L as LoneAnonymousOperationRule,t as LoneSchemaDefinitionRule,M as MaxIntrospectionDepthRule,N as NoFragmentCyclesRule,e as NoUndefinedVariablesRule,f as NoUnusedFragmentsRule,g as NoUnusedVariablesRule,O as OverlappingFieldsCanBeMergedRule,P as PossibleFragmentSpreadsRule,B as PossibleTypeExtensionsRule,h as ProvidedRequiredArgumentsRule,S as ScalarLeafsRule,i as SingleFieldSubscriptionsRule,T as TypeInfo,z as UniqueArgumentDefinitionNamesRule,U as UniqueArgumentNamesRule,A as UniqueDirectiveNamesRule,j as UniqueDirectivesPerLocationRule,x as UniqueEnumValueNamesRule,y as UniqueFieldDefinitionNamesRule,k as UniqueFragmentNamesRule,l as UniqueInputFieldNamesRule,m as UniqueOperationNamesRule,u as UniqueOperationTypesRule,w as UniqueTypeNamesRule,n as UniqueVariableNamesRule,V as ValidationContext,o as ValuesOfCorrectTypeRule,p as VariablesAreInputTypesRule,q as VariablesInAllowedPositionRule,r as recommendedRules,s as specifiedRules,C as visitWithTypeInfo}from"./_/8BS7TVdU.js";export{G as GraphQLSchema,a as assertSchema,i as isSchema}from"./_/CHe2iBc5.js";import{g as re,i as te}from"./_/B5LKBmEi.js";export{e as GraphQLEnumType,f as GraphQLInputObjectType,c as GraphQLInterfaceType,h as GraphQLList,j as GraphQLNonNull,b as GraphQLObjectType,G as GraphQLScalarType,d as GraphQLUnionType,R as assertAbstractType,Q as assertCompositeType,J as assertEnumType,X as assertEnumValueName,K as assertInputObjectType,N as assertInputType,H as assertInterfaceType,P as assertLeafType,L as assertListType,W as assertName,U as assertNamedType,M as assertNonNullType,T as assertNullableType,F as assertObjectType,O as assertOutputType,E as assertScalarType,D as assertType,I as assertUnionType,S as assertWrappingType,V as getNullableType,x as isAbstractType,w as isCompositeType,p as isEnumType,t as isInputType,n as isInterfaceType,v as isLeafType,q as isListType,A as isNamedType,s as isNonNullType,z as isNullableType,m as isObjectType,u as isOutputType,B as isRequiredArgument,C as isRequiredInputField,l as isScalarType,k as isType,o as isUnionType,y as isWrappingType,r as resolveObjMapThunk,a as resolveReadonlyArrayThunk}from"./_/B5LKBmEi.js";export{D as DEFAULT_DEPRECATION_REASON,f as GRAPHQL_MAX_INT,g as GRAPHQL_MIN_INT,d as GraphQLBoolean,k as GraphQLDeprecatedDirective,G as GraphQLDirective,b as GraphQLFloat,e as GraphQLID,i as GraphQLIncludeDirective,a as GraphQLInt,m as GraphQLOneOfDirective,j as GraphQLSkipDirective,l as GraphQLSpecifiedByDirective,c as GraphQLString,q as assertDirective,n as isDirective,p as isSpecifiedDirective,o as isSpecifiedScalarType,h as specifiedDirectives,s as specifiedScalarTypes}from"./_/BsP0p6x-.js";import{i as ie}from"./_/BhNCDRla.js";export{S as SchemaMetaFieldDef,T as TypeKind,j as TypeMetaFieldDef,k as TypeNameMetaFieldDef,b as __Directive,c as __DirectiveLocation,g as __EnumValue,e as __Field,f as __InputValue,_ as __Schema,d as __Type,h as __TypeKind,l as astFromValue,a as introspectionTypes}from"./_/BhNCDRla.js";import"./language/index.mjs";export{pathToArray as responsePathAsArray}from"./jsutils/Path.mjs";export{c as createSourceEventStream,s as subscribe}from"./_/yXddVwgM.js";export{c as coerceInputValue,g as getArgumentValues,b as getDirectiveValues,a as getVariableValues,t as typeFromAST}from"./_/B6RniWKm.js";import{i as ne,G as oe}from"./_/BV2gsYLJ.js";export{f as formatError,g as getLocation,b as printError,p as printLocation,a as printSourceLocation}from"./_/BV2gsYLJ.js";export{BreakingChangeType,DangerousChangeType,assertValidName,concatAST,findBreakingChanges,findDangerousChanges,getOperationAST,getOperationRootType,introspectionFromSchema,isValidNameError,lexicographicSortSchema,separateOperations,stripIgnoredCharacters}from"./utilities/index.mjs";export{Location,OperationTypeNode,Token}from"./language/ast.mjs";export{Source}from"./language/source.mjs";export{print}from"./language/printer.mjs";export{BREAK,getEnterLeaveForKind,getVisitFn,visit,visitInParallel}from"./language/visitor.mjs";export{Kind}from"./language/kinds.mjs";export{D as DirectiveLocation}from"./_/Cn62mI6f.js";export{d as isConstValueNode,i as isDefinitionNode,a as isExecutableDefinitionNode,b as isSelectionNode,g as isTypeDefinitionNode,j as isTypeExtensionNode,e as isTypeNode,f as isTypeSystemDefinitionNode,h as isTypeSystemExtensionNode,c as isValueNode}from"./_/W3n03F42.js";export{getIntrospectionQuery}from"./utilities/getIntrospectionQuery.mjs";export{buildClientSchema}from"./utilities/buildClientSchema.mjs";export{b as buildASTSchema,a as buildSchema,e as extendSchema}from"./_/sJ73wJnO.js";export{printIntrospectionSchema,printSchema,printType}from"./utilities/printSchema.mjs";export{v as valueFromAST}from"./_/DyFTU1ek.js";export{v as valueFromASTUntyped}from"./_/CSvTCBGo.js";import"./jsutils/inspect.mjs";import"./_/0q9NsxKT.js";import"./execution/collectFields.mjs";import"./_/BtPNimOV.js";import"./_/DCZeeFS4.js";const pe="16.11.0";const le=Object.freeze({major:16,minor:11,patch:0,preReleaseTag:null});function ue(e){return new Promise((s=>s(me(e))))}function ce(e){const s=me(e);if(Y(s))throw new Error("GraphQL execution failed to complete synchronously.");return s}function me(e){arguments.length<2||$(false,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:s,source:a,rootValue:r,contextValue:t,variableValues:i,operationName:n,fieldResolver:o,typeResolver:p}=e;const l=se(s);if(l.length>0)return{errors:l};let u;try{u=ee(a)}catch(e){return{errors:[e]}}const c=ae(s,u);return c.length>0?{errors:c}:Z({schema:s,document:u,rootValue:r,contextValue:t,variableValues:i,operationName:n,fieldResolver:o,typeResolver:p})}function de(e){return{Field(s){const a=e.getFieldDef();const r=a===null||a===void 0?void 0:a.deprecationReason;if(a&&r!=null){const t=e.getParentType();t!=null||ne(false);e.reportError(new oe(`The field ${t.name}.${a.name} is deprecated. ${r}`,{nodes:s}))}},Argument(s){const a=e.getArgument();const r=a===null||a===void 0?void 0:a.deprecationReason;if(a&&r!=null){const t=e.getDirective();if(t!=null)e.reportError(new oe(`Directive "@${t.name}" argument "${a.name}" is deprecated. ${r}`,{nodes:s}));else{const t=e.getParentType();const i=e.getFieldDef();t!=null&&i!=null||ne(false);e.reportError(new oe(`Field "${t.name}.${i.name}" argument "${a.name}" is deprecated. ${r}`,{nodes:s}))}}},ObjectField(s){const a=re(e.getParentInputType());if(te(a)){const r=a.getFields()[s.name.value];const t=r===null||r===void 0?void 0:r.deprecationReason;t!=null&&e.reportError(new oe(`The input field ${a.name}.${r.name} is deprecated. ${t}`,{nodes:s}))}},EnumValue(s){const a=e.getEnumValue();const r=a===null||a===void 0?void 0:a.deprecationReason;if(a&&r!=null){const t=re(e.getInputType());t!=null||ne(false);e.reportError(new oe(`The enum value "${t.name}.${a.name}" is deprecated. ${r}`,{nodes:s}))}}}}function ye(e){return{Field(s){const a=re(e.getType());a&&ie(a)&&e.reportError(new oe(`GraphQL introspection has been disabled, but the requested query contained the field "${s.name.value}".`,{nodes:s}))}}}export{oe as GraphQLError,de as NoDeprecatedCustomRule,ye as NoSchemaIntrospectionCustomRule,Z as execute,re as getNamedType,ue as graphql,ce as graphqlSync,te as isInputObjectType,ie as isIntrospectionType,ee as parse,ae as validate,se as validateSchema,pe as version,le as versionInfo};

