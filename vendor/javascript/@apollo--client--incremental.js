// @apollo/client/incremental@4.0.4 downloaded from https://ga.jspm.io/npm:@apollo/client@4.0.4/incremental/index.js

import{hasDirectives as e,DeepMerger as t,isNonEmptyArray as r}from"@apollo/client/utilities/internal";import{invariant as s}from"@apollo/client/utilities/invariant";class NotImplementedHandler{isIncrementalResult(e){return false}prepareRequest(t){s(!e(["defer"],t.query),64);return t}extractErrors(){}startRequest=void 0}class DeferRequest{hasNext=true;errors=[];extensions={};data={};mergeIn(e,t){e.data!==void 0&&(this.data=t.merge(this.data,e.data));e.errors&&this.errors.push(...e.errors);Object.assign(this.extensions,e.extensions)}handle(e=this.data,s){this.hasNext=s.hasNext;this.data=e;this.mergeIn(s,new t);if(n(s)){const e=new t;for(const t of s.incremental){let{data:r,path:s,errors:n,extensions:a}=t;if(r&&s)for(let e=s.length-1;e>=0;--e){const t=s[e];const n=!isNaN(+t);const a=n?[]:{};a[t]=r;r=a}this.mergeIn({errors:n,extensions:a,data:r||void 0},e)}}const a={data:this.data};r(this.errors)&&(a.errors=this.errors);Object.keys(this.extensions).length>0&&(a.extensions=this.extensions);return a}}class Defer20220824Handler{isIncrementalResult(e){return"hasNext"in e}extractErrors(e){const t=[];const r=({errors:e})=>{e&&t.push(...e)};if(this.isIncrementalResult(e)){r(e);n(e)&&e.incremental.forEach(r)}if(t.length)return t}prepareRequest(t){if(e(["defer"],t.query)){const e=t.context??{};const r=e.http??={};r.accept=["multipart/mixed;deferSpec=20220824",...r.accept||[]]}return t}startRequest(e){return new DeferRequest}}function n(e){return r(e.incremental)}export{Defer20220824Handler,Defer20220824Handler as GraphQL17Alpha2Handler,NotImplementedHandler};

